t = [];

t.x = 1;
t.y = 2;
t.z = 3;

oldSize = object_size(t);

t.x = nil;
assert(oldSize == object_size(t) + 1);
t.y = nil;
assert(oldSize == object_size(t) + 2);

x = t.x;
print(x);
print(t.x);

assert(t.x == x);
assert(x == nil);
assert(t.x == nil);

function foobar() { }

foobar.x = nil;
print(t.x);
print(x);
assert(typeof(x) == "undef");
assert(typeof(t.x) == "nil");

function outer(x) {
    function inner() {
        if (inner.$closure.x and
            typeof(print) == "library function") print(x);
    }

    return inner;
}

func = outer(10);
func();

func.x = 20;
func();

func.x = nil;
func();

func.x = 30;
func();

func = outer(35);
func.$closure.x = 40;
func();